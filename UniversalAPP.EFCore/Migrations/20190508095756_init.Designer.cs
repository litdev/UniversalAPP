// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UniversalAPP.EFCore;

namespace UniversalAPP.EFCore.Migrations
{
    [DbContext(typeof(EFDBContext))]
    [Migration("20190508095756_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UniversalAPP.Entity.AppVersion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte>("APPType");

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Content")
                        .HasMaxLength(500);

                    b.Property<string>("DownUrl")
                        .HasMaxLength(255);

                    b.Property<string>("LinkUrl")
                        .HasMaxLength(500);

                    b.Property<string>("LogoImg")
                        .HasMaxLength(255);

                    b.Property<string>("MD5")
                        .HasMaxLength(100);

                    b.Property<byte>("Platforms");

                    b.Property<long>("Size");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("VersionCode");

                    b.HasKey("ID");

                    b.ToTable("AppVersons");
                });

            modelBuilder.Entity("UniversalAPP.Entity.CusCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<int>("Depth");

                    b.Property<int?>("PID");

                    b.Property<bool>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("PID");

                    b.ToTable("CusCategorys");
                });

            modelBuilder.Entity("UniversalAPP.Entity.Demo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<int?>("AddUserID");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<int?>("LastUpdateUserID");

                    b.Property<float>("Num");

                    b.Property<decimal>("Price");

                    b.Property<int>("Ran");

                    b.Property<string>("Telphone")
                        .HasMaxLength(15);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ID");

                    b.HasIndex("AddUserID");

                    b.HasIndex("LastUpdateUserID");

                    b.ToTable("Demos");
                });

            modelBuilder.Entity("UniversalAPP.Entity.DemoAlbum", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemoID");

                    b.Property<string>("ImgUrl")
                        .IsRequired();

                    b.Property<int>("Weight");

                    b.HasKey("ID");

                    b.HasIndex("DemoID");

                    b.ToTable("DemoAlbums");
                });

            modelBuilder.Entity("UniversalAPP.Entity.DemoDept", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DemoID");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int>("Num");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.HasIndex("DemoID");

                    b.ToTable("DemoDepts");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysLogException", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("StackTrace");

                    b.HasKey("ID");

                    b.ToTable("SysLogExceptions");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysLogMethod", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("SysUserID");

                    b.Property<byte>("Type");

                    b.HasKey("ID");

                    b.HasIndex("SysUserID");

                    b.ToTable("SysLogMethods");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysRole", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("RoleDesc")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("SysRoles");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysRoleRoute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SysRoleID");

                    b.Property<int>("SysRouteID");

                    b.HasKey("ID");

                    b.HasIndex("SysRoleID");

                    b.HasIndex("SysRouteID");

                    b.ToTable("SysRoleRoutes");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysRoute", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Desc")
                        .HasMaxLength(30);

                    b.Property<bool>("IsPost");

                    b.Property<string>("Route")
                        .HasMaxLength(30);

                    b.Property<string>("Tag")
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("SysRoutes");
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<byte>("Gender");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("RegTime");

                    b.Property<bool>("Status");

                    b.Property<int>("SysRoleID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("ID");

                    b.HasIndex("SysRoleID");

                    b.ToTable("SysUser");
                });

            modelBuilder.Entity("UniversalAPP.Entity.CusCategory", b =>
                {
                    b.HasOne("UniversalAPP.Entity.CusCategory", "PCategory")
                        .WithMany()
                        .HasForeignKey("PID");
                });

            modelBuilder.Entity("UniversalAPP.Entity.Demo", b =>
                {
                    b.HasOne("UniversalAPP.Entity.SysUser", "AddUser")
                        .WithMany()
                        .HasForeignKey("AddUserID");

                    b.HasOne("UniversalAPP.Entity.SysUser", "LastUpdateUser")
                        .WithMany()
                        .HasForeignKey("LastUpdateUserID");
                });

            modelBuilder.Entity("UniversalAPP.Entity.DemoAlbum", b =>
                {
                    b.HasOne("UniversalAPP.Entity.Demo", "Demo")
                        .WithMany("Albums")
                        .HasForeignKey("DemoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversalAPP.Entity.DemoDept", b =>
                {
                    b.HasOne("UniversalAPP.Entity.Demo")
                        .WithMany("Depts")
                        .HasForeignKey("DemoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysLogMethod", b =>
                {
                    b.HasOne("UniversalAPP.Entity.SysUser", "SysUser")
                        .WithMany()
                        .HasForeignKey("SysUserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysRoleRoute", b =>
                {
                    b.HasOne("UniversalAPP.Entity.SysRole", "SysRole")
                        .WithMany("SysRoleRoutes")
                        .HasForeignKey("SysRoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UniversalAPP.Entity.SysRoute", "SysRoute")
                        .WithMany()
                        .HasForeignKey("SysRouteID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UniversalAPP.Entity.SysUser", b =>
                {
                    b.HasOne("UniversalAPP.Entity.SysRole", "SysRole")
                        .WithMany()
                        .HasForeignKey("SysRoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
